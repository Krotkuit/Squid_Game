plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'fr.salut'
version = '1.0-SNAPSHOT'


repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {url = "https://repo.papermc.io/repository/maven-public/"}
    maven {url = "https://oss.sonatype.org/content/groups/public/"}
    maven {url = "https://mvn.mathiasd.fr/releases"}
    maven {url = "https://maven.enginehub.org/repo/"}
    maven {url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"}
    maven {url = "https://jitpack.io"}
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT")
    compileOnly("me.clip:placeholderapi:2.11.6")
    compileOnly("net.luckperms:api:5.4")

    implementation("dev.xernas:menulib:1.1.0")
    implementation("com.github.SkytAsul:GlowingEntities:1.4.3")
    implementation("org.jetbrains:annotations:24.1.0")
    implementation("com.github.Revxrsal.Lamp:common:3.2.1")
    implementation("com.github.Revxrsal.Lamp:bukkit:3.2.1")

    compileOnly ('org.projectlombok:lombok:1.18.30')
    annotationProcessor ('org.projectlombok:lombok:1.18.30')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    destinationDirectory.set(file("./build/")) //"./build/"
    archiveFileName = "SquidGame.jar"
}

setLibsDirName("../Server/plugins")